plugins {
    id 'java-library'
    id 'org.jetbrains.kotlin.jvm'
    id 'maven-publish'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.6.0"
    api('com.ray.module:network-dependency:1.0')

    implementation "androidx.core:core-ktx:1.3.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.0"

    api "com.squareup.retrofit2:retrofit:2.8.1"
    api "com.google.code.gson:gson:2.8.6"
    api("com.squareup.retrofit2:converter-gson:2.8.1") {
        exclude group: 'com.google.code.gson', module: 'gson'
    }
    api "com.squareup.okhttp3:logging-interceptor:4.0.0"

}

//用于将多个外部jar依赖包合并为一个jar输出，jar包上传maven，指定artifact为jar文件
//比如：artifact "build/libs/http_network-sources.jar"
task sourceJar(type: Jar) {
    archiveClassifier.set('sources')
    from(project.zipTree('libs/commons-beanutils-1.9.4.jar'))
    from(project.zipTree('libs/commons-collections-3.2.2.jar'))
    from(project.zipTree('libs/commons-lang-2.6.jar'))
    from(project.zipTree('libs/commons-logging-1.2.jar'))
    from(project.zipTree('libs/ezmorph-1.0.6.jar'))
    from(project.zipTree('libs/json-lib-2.4-jdk15.jar'))
    //from sourceSets.main.allSource
    destinationDir(file('build/libs'))
    //输出目录
    duplicatesStrategy(DuplicatesStrategy.INCLUDE)
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            //from components.java
            groupId = "com.ray.module"
            artifactId = "network-dependency"
            version = "1.0"
            artifact "build/libs/http_network-sources.jar"
//            pom.withXml {
//                def dependenciesNode = asNode().appendNode('dependencies')
//                project.configurations.implementation.allDependencies.each {
//                    // 避免出现空节点或 artifactId=unspecified 的节点
//                    if (it.group != null && (it.name != null && "unspecified" != it.name) && it.version != null) {
//                        println it.toString()
//                        def dependencyNode = dependenciesNode.appendNode('dependency')
//                        dependencyNode.appendNode('groupId', it.group)
//                        dependencyNode.appendNode('artifactId', it.name)
//                        dependencyNode.appendNode('version', it.version)
//                        dependencyNode.appendNode('scope', 'implementation')
//                    }
//                }
//            }
        }
    }

    repositories {
        mavenLocal()
        maven {
            url = '/users/pengrui/CODE/Maven/self-maven'
        }
    }

//    repositories {
//        maven { MavenArtifactRepository repository ->
//            repository.allowInsecureProtocol(true)
//            repository.url("http://192.168.20.47:8081/repository/leke-releases/")
//            repository.credentials {
//                username("leke")
//                password("leke123")
//            }
//        }.allowInsecureProtocol(true)
//    }
}